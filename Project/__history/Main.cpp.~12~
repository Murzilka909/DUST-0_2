//---------------------------------------------------------------------------
#include <vcl.h>
#include <iostream>
#include <string>
#include <sstream>
#include <cstdio>
#include <stdlib.h>
#include <iomanip>

#include <vcl.h>
#pragma hdrstop

#include "Main.h"
#include "Classes.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//----------------------глобальные переменные--------------------------------
FILE* file_Data;          //осциллограмма - чтение
FILE* file_Res;           //спектр - запись

std::string fName; //имя и путь к файлу

int strNum, colNum; //кол-во строк и столбцов в файле данных
int fileSize;      //размер файла в байтах

double limV=2000;//предел напряжения

int i,j,k;//счётчики
char c;//буфер
char cBuf[8];//буфер
std::string s;//буфер

DataPoint* DataP;

//---------------------преобразования типов всякие---------------------------
std::string UnicodeToString (UnicodeString us)
{
	AnsiString as=us;
	std::string s = as.c_str();
	return s;
}
std::string IntToString (int a)
{
	std::stringstream ss;
	ss << a;
	std::string s = ss.str();
	return s;
}
std::string DoubleToString(double a)
{
	std::stringstream ss;
	ss.setf(std::ios::scientific, std::ios::floatfield);
	ss << std::setprecision(5) << a;
	std::string s = ss.str();
	return s;
}
std::string CounterToFnum (int a, int n)
{
	char* ch = new char[5];
	ch[0]='(';
	if (n==3) {ch[1]=(char)(((int)'0')+a);}
	if (n==4)
	{
		ch[2]=(char)(((int)'0')+a%10);
		ch[1]=(char)(((int)'0')+a/10);
	}
	if (n==5)
	{
		ch[3]=(char)(((int)'0')+a%10);
		ch[2]=(char)(((int)'0')+(a/10)%10);
		ch[1]=(char)(((int)'0')+(a/100));
	}
	ch[n-1]=')';
	/*int a1 = a%10;
	int a2 = (a%100)/10;
	int a3 = (a%1000)/100;
	int a4 = a/1000;
	char ch [5];
	ch[0] = '-';
	ch[1] = (char)(((int)'0')+a4);
	ch[2] = (char)(((int)'0')+a3);
	ch[3] = (char)(((int)'0')+a2);
	ch[4] = (char)(((int)'0')+a1);
	//std::string s(ch);*/ //этот кусок для версии файлов с названиями в формате
	//дата-номерв4знака
	//сейчас используется формат дата (номер)
	return (ch);
}

//--------------------получение размера файла,выделение памяти---------------
void GetFileSize()
{
	delete DataP;
	fseek( file_Data , 0 , SEEK_END );//в конец файла маркер
	fileSize = ftell(file_Data);//размер файла в байтах
	fseek( file_Data , 0 , SEEK_SET );//обратно
	int count=0;
	strNum=0;
	colNum=0;
	while (ftell(file_Data)<fileSize)//подсчёт размеров файла
	{
		fread(&c,1,1,file_Data);
		if (c=='\n')
		{strNum++;}
		if (c=='\t')
		{colNum++;}
		count++;
	}
	strNum=strNum-3;
	colNum=((colNum-2)/strNum)+1;       //подбивка размеров
	DataP=new DataPoint(colNum);
}

//--------------------подготовка к чтению -----------------------------------
void PrepareForRead()
{
	fseek( file_Data , 0 , SEEK_SET );//маркер в начало
	int count=0;
	while (count<3)  //первые строки пропустил
	{
		fread(&c,1,1,file_Data);
		if (count==1)
		{

		}
		if (c=='\n') {count++;}
	}
}

//--------------------чтение числа из файла в память-------------------------
void ReadStrFile(double* DAT)
{
	int count=0;
	int count_1;
	fseek( file_Data , -1 , SEEK_CUR );
	while (c!='\n') {fread(&c,1,1,file_Data);}
	fread(&c,1,1,file_Data);
	while(count<colNum)//строки
	{
		count_1=0;
		c=0;
		while((count_1<8)&(c!='\t')&(c!='\n'))//цифры
		{
			fread(&c,1,1,file_Data);
			cBuf[count_1]=c;
			count_1++;
		}
		if (count_1<8)     //если зашкал
		{
			if (cBuf[1]=='-'){DAT[count]=-limV;}
			else {DAT[count]=limV;}
		}
		else        //если не зашкал
		{
			s=cBuf;
			DAT[count]=atof(s.c_str());
			while ((c!='\t')&(c!='\n')) {fread(&c,1,1,file_Data);}
		}
		count++;
	}

}

//--------------------обработка данных---------------------------------------
void Calc()
{

}

//----------------------открытие окна----------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
	TLineSeries *serie = new TLineSeries(HandChart);
	HandChart->AddSeries(serie);
	serie->Title = "A";
	serie->LinePen->Width = 2;

	serie = new TLineSeries(HandChart);
	HandChart->AddSeries(serie);
	serie->Title = "B";
	serie->LinePen->Width = 2;
}

//---------------------закрытие окна-----------------------------------------
void __fastcall TForm1::Exit_ButtonClick(TObject *Sender)
{
	fclose (file_Data);
	Close();
}

//---------------------чтение файла в ручном режиме--------------------------
void __fastcall TForm1::HandFNameButtonClick(TObject *Sender)
{
	fclose (file_Data);
	if ( HandTextFileDialog->Execute() )
	//диалог сработал
	{
		FNameLabel->Caption=HandTextFileDialog->FileName;
		fName=UnicodeToString(FNameLabel->Caption);
		file_Data = fopen(fName.c_str(), "r");
		if (file_Data != NULL)  //файл открылся
		{
			GetFileSize();  //cчитали размеры
			j=0;
			while(j<colNum-1)
			{
				HandChart->Series[j]->Clear();
				j++;
			}
			PrepareForRead();
			double* BUF= new double[colNum];
			i=0;
			while(i<strNum)
			{
				ReadStrFile(BUF);
				j=0;
				while(j<colNum-1)
				{
					HandChart->Series[j]->AddXY(BUF[0],BUF[j+1]);
					j++;
				}
				i++;
			}
			fclose (file_Data);
			delete BUF;
		}
		else    //файл не открылся
		{
			ShowMessage("File is not opened");
			FNameLabel->Caption="The file is not selected";
		}
	}
	else //диалог не сработал
	{
		ShowMessage("File is not selected");
		FNameLabel->Caption="The file is not selected";
	}
}

//---------------------------------------------------------------------------

